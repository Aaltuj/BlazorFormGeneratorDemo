@page "/"

@using VxFormGenerator
@using VxFormGenerator.Components
@using FormGeneratorDemo.Data
@using System.Dynamic

<h1>Hello, world!</h1>

Welcome to your new app.

<!-- Bind the session instance of the FeedingSession to the DataContext parameter
     Also hook up the event when the submit button is clicked
<FormGenerator DataContext="session"
               OnValidSubmit="HandleValidSubmit"></FormGenerator-->
<!-- Output -->

<EditForm Model="session" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleValidSubmit">
    <RenderFormElements></RenderFormElements>
    <button type="submit">Submit</button>
</EditForm>

<label>@session.Note</label>

<EditForm Model="poco" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <RenderFormElements></RenderFormElements>
    <button type="submit">Submit</button>
</EditForm>

@code{

    /// <summary>
    /// Model that is used for the form
    /// </summary>
    private FeedingSession poco = new FeedingSession();
    private dynamic session;


    protected override void OnInitialized()
    {
        var o = new ExpandoObject();
        ((IDictionary<String, Object>)o).Add("Name", "add");
        ((IDictionary<String, Object>)o).Add("Note", "Blaaat");
        ((IDictionary<String, Object>)o).Add("Date", DateTime.Now);
        ((IDictionary<String, Object>)o).Add("Amount", 0);
        session = o;

    }

    /// <summary>
    /// Will handle the submit action of the form
    /// </summary>
    /// <param name="context">The model with values as entered in the form</param>
    private void HandleValidSubmit(EditContext context)
    {
        // save your changes
    }

    private void MyValueChangeHandler(ValueReference<string, bool> selection)
    {
        selection.Value = !selection.Value;

    }

}