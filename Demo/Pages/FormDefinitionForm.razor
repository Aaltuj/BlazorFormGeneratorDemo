@page "/definition-form"

@using VxFormGenerator.Core
@using VxFormGenerator.Core.Layout
@using VxFormGeneratorDemoData


<h1>Model Based Form Demo</h1>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Generated by dynamic ExpandoObject</h5>

        <EditForm Model="Options"
                  OnSubmit="ChangeLayoutOptions">
            <VxFormGenerator.Core.Validation.ObjectGraphDataAnnotationsValidator />
            <RenderFormElements></RenderFormElements>
            <button class="btn btn-primary" type="submit">Submit</button>
        </EditForm>

    </div>
</div>
<br />

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Generated by POCO</h5>
        <EditForm Model="Model"
                  OnValidSubmit="HandleValidSubmit"
                  OnInvalidSubmit="HandleInValidSubmit">
            <VxFormGenerator.Core.Validation.ObjectGraphDataAnnotationsValidator />
            <RenderFormElements FormLayoutOptions="@OptionsForForm"></RenderFormElements>
            <button class="btn btn-primary" type="submit">Submit</button>
        </EditForm>
    </div>
</div>

@code{

    /// <summary>
    /// Model that is used for the form
    /// </summary>
    private OrderViewModel Model = new OrderViewModel();
    private VxFormLayoutOptionsAnnotated Options = new VxFormLayoutOptionsAnnotated();
    private VxFormLayoutOptions OptionsForForm = new VxFormLayoutOptions();


    /// <summary>
    /// Will handle the submit action of the form
    /// </summary>
    /// <param name="context">The model with values as entered in the form</param>
    private void HandleValidSubmit(EditContext context)
    {
        // save your changes
    }

    private void HandleInValidSubmit(EditContext context)
    {


    }

    private void ChangeLayoutOptions(EditContext context)
    {
        OptionsForForm = ((VxFormLayoutOptionsAnnotated)context.Model).ToFormLayoutOptions();

    }

}
