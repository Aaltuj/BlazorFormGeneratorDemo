@page "/"

@using FormGeneratorDemo.Components.FormGenerator
@using FormGeneratorDemo.Components.FormGenerator.Components
@using FormGeneratorDemo.Data

<h1>Hello, world!</h1>

Welcome to your new app.

<!-- Bind the session instance of the FeedingSession to the DataContext parameter
     Also hook up the event when the submit button is clicked -->
<FormGenerator DataContext="session"
               OnValidSubmit="HandleValidSubmit"></FormGenerator>

<EditForm Model="session">
    <InputCheckboxMultiple @bind-Value="session.ThrowingUpDict" >
        @foreach (var item in session.ThrowingUpDict)
        {
            <VxInputCheckbox Label="@item.Key" Value="item.Value" ValueChanged="() => MyValueChangeHandler(item)" ValueExpression="()=>item.Value"></VxInputCheckbox>
        }
        <!-- <VxInputCheckbox bind-Value="session.ThrowingUp"></VxInputCheckbox> -->

    </InputCheckboxMultiple>

</EditForm>
<!-- Output -->
<div class="card mt-2">
    <div class="card-header">
        Output
    </div>
    <div class="card-body">
        <div>
            <label class="mr-2">Note:</label>
            <label>@session.Note</label>
        </div>
        <div>
            <label class="mr-2">Amount:</label>
            <label>@session.Amount</label>
        </div>
        <div>
            <label class="mr-2">Start:</label>
            <label>@session.Start</label>
        </div>
        <div>
            <label class="mr-2">End:</label>
            <label>@session.End</label>
        </div>
        <div>
            <label class="mr-2">Kind of food:</label>
            <label>@session.KindOfFood</label>
        </div>
        <div>
            <label class="mr-2">Has thrown up:</label>
            <label>@session.ThrowingUp</label>
        </div>
        <div>
            <label class="mr-2">Has thrown up:</label>
            <label>@session.ThrowingUpDict[0].Value</label>
        </div>
    </div>
</div>

@code{

    /// <summary>
    /// Model that is used for the form
    /// </summary>
    private FeedingSession session = new FeedingSession();



    protected override void OnInitialized()
    {
        
    }

    /// <summary>
    /// Will handle the submit action of the form
    /// </summary>
    /// <param name="context">The model with values as entered in the form</param>
    private void HandleValidSubmit(EditContext context)
    {
        // save your changes
    }

    private void MyValueChangeHandler(ValueReference<string, bool> selection)
    {
        selection.Value = !selection.Value;

    }

}