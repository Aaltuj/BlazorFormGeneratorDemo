<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CS.Changelog.Console</name>
    </assembly>
    <members>
        <member name="T:CS.Changelog.Console.NamespaceDoc">
            <summary>
            A command-line application for creating git-commit-history based changelogs. See <see cref="T:CS.Changelog.Console.Options"/> for usage.
            </summary>
        </member>
        <member name="T:CS.Changelog.Console.Options">
            <summary>
            Options that can be passed to the console application:
            <code>
             -n, --releasename         (Default: '')
                                       The name of the release (like 'operation high ground' or 'preview')
                                       
             -g, --pathToGit           (Default: git)
                                       Path to git
                                          
             -r, --repositoryDirectory (Default: '')
                                       Path to the repository
                                          
                 --replace             (Default: False)
                                       When set replaces the target file, instead of appending.
                                          
             -f, --filename            (Default: Changelog)
                                       The file to write to, if no file extension is specified, output-specific extension will be added.
                                       
             -o, --outputformat        (Default: JSON)
                                       The output format
                                          
             -v, --verbosity           (Default: Debug)
                                       Prints all messages to standard output
                                       
                 --full     		   (Default: False)
                                       By default only changes since the last release need to be included, when set includes all changes.
                                       
             -s, --startTag            (Default: null)
                                       In order to make an incremental change log since a specified tag. If no tag is specified auto-detects the last release tag.
                                       If a tag is specified, overrides option --full
                                          
             --issueformat             (Default: <see cref="F:CS.Changelog.Exporters.ExportOptions.IssueNumberRegexDefault"/>)
                                       Expression for recognizing issue numbers
                                          
             --issuetrackerurl         (Default: https://project.cs.nl/issue/{0})
                                       Url for recognizing issue numbers. '{0}' will be substituted with issue number
                                          
             --repositoryurl           Url for showing commit details
                                          
             --dontlinkifyissuenumbers (Default: False)
                                       When set recognized issue numbers will be not converted to links
                                          
             --branch_development      (Default: develop)
                                       The development branch
                                          
             --branch_master           (Default: master)
                                       The master branch
                                          
             --branch_preview          (Default: preview)
                                       The preview branch
                                          
             --prefix_hotfix           (Default: hotfix)
                                       The prefix of hotfix branches
                                          
             --prefix_release          (Default: release)
                                       The prefix of release branches
                                          
             --prefix_feature          (Default: feature)
                                       The prefix of release ranches
                                          
             --category_feature        (Default: Feature)
                                       The display label of the feature category
                                          
             --category_hotfix         (Default: Hotfix)
                                       The display label of the hotfix category
                                          
             --help                    Display this help screen.
             
             --openfile				   Open file after generation
            </code>
            </summary>
        </member>
        <member name="P:CS.Changelog.Console.Options.ReleaseName">
            <summary>Gets or sets the path to git.</summary>
            <value>The path to git, defaults to <c>git</c>.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.PathToGit">
            <summary>Gets or sets the path to git.</summary>
            <value>The path to git, defaults to <c>git</c>.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Full">
            <summary>Specified to generate an incremental change log or a full log.</summary>
            <value>Default to <c>false</c>.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.StartTag">
            <summary>The starting tag to use when making getting incremental history, overriding option 'full'.</summary>
            <value>Defaults to <c>null</c>.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.RepositoryLocation">
            <summary>Gets or sets the repository location, defaults to the current directory.</summary>
            <value>The repository location.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Replace">
            <summary>
            Replace the target file. Default is not to overwrite, but to append.
            </summary>
            <value><c>true</c> if the exported file should be overwritten; otherwise, the file is appended.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.TargetFile">
            <summary>Gets or sets the target file name.</summary>
            <value>The target file.</value>
            <remarks>If no file extension is specified, output-specific extension will be added.</remarks>
        </member>
        <member name="P:CS.Changelog.Console.Options.OpenFile">
            <summary>When set opens the file after creation</summary>
            <value>Whether to open the generated file or not.</value>
            <remarks>Only works in interactive mode</remarks>
        </member>
        <member name="P:CS.Changelog.Console.Options.OutputFormat">
            <summary>The format of the changelog.</summary>
            <value>The target file.</value>
            <remarks>Some output formats (<see cref="F:CS.Changelog.OutputFormat.MarkDown"/>, <see cref="F:CS.Changelog.OutputFormat.Html"/>) do only correctly implement appending by when using an intermediate serializable format (JSON, XML) which is committed to the repository. </remarks>
            <seealso cref="P:CS.Changelog.Console.Options.OutputFormat"/>
        </member>
        <member name="P:CS.Changelog.Console.Options.Verbosity">
            <summary>Gets or sets the <see cref="T:CS.Changelog.LogLevel">verbosity</see> of the output.</summary>
            <value>The verbosity. Default to <see cref="P:CS.Changelog.Utils.ConsoleExtensions.Verbosity"/>.</value>
        </member>
        <member name="F:CS.Changelog.Console.Options.DefaultIssueNumberRegex">
            <summary>
            The default issue number regular expression
            </summary>
        </member>
        <member name="P:CS.Changelog.Console.Options.IssueNumberRegex">
            <summary>Gets or sets the issue number regular expression.</summary>
            <value>The issue number regex.</value>
            <remarks>Defaults to <see cref="F:CS.Changelog.Console.Options.DefaultIssueNumberRegex"/>.</remarks>
            <seealso cref="P:CS.Changelog.Console.Options.DontLinkifyIssueNumbers"/> 
            <seealso cref="P:CS.Changelog.Console.Options.IssueTrackerUrl"/> 
        </member>
        <member name="P:CS.Changelog.Console.Options.IssueTrackerUrl">
            <summary>Gets or sets the issue tracker URL, for linkifying issue numbers.</summary>
            <value>The issue tracker URL.</value>
            <seealso cref="P:CS.Changelog.Console.Options.DontLinkifyIssueNumbers"/> 
            <seealso cref="P:CS.Changelog.Console.Options.IssueNumberRegex"/> 
        </member>
        <member name="P:CS.Changelog.Console.Options.CommitDetailsUrl">
            <summary>Gets or sets the commit details URL, used when commit hashes are to be linkified.
            <c>{0}</c> will be replaced with the commit hash.
            </summary>
            <value>The commit details URL.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.DontLinkifyIssueNumbers">
            <summary>
            Gets or sets a value indicating whether issue number should be linkified.
            </summary>
            <value><c>true</c> if issue numbers should be linkified; otherwise, <c>false</c>.</value>
            <seealso cref="P:CS.Changelog.Console.Options.IssueNumberRegex"/> 
            <seealso cref="P:CS.Changelog.Console.Options.IssueTrackerUrl"/> 
        </member>
        <member name="P:CS.Changelog.Console.Options.Branch_development">
            <summary>Gets or sets the name of the development branch for GitFlow purposes</summary>
            <value>The development branch name.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Branch_master">
            <summary>Gets or sets the name of the master branch for GitFlow purposes</summary>
            <value>The master branch name.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Branch_preview">
            <summary>Gets or sets the name of the preview branch for GitFlow+ purposes</summary>
            <value>The preview branch name.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Prefix_hotfix">
            <summary>Gets or sets the prefix of the hotfix branches for GitFlow purposes</summary>
            <value>The hotfix branches prefix.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Prefix_release">
            <summary>Gets or sets the prefix of the release branches for GitFlow purposes</summary>
            <value>The release branches prefix.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Prefix_feature">
            <summary>Gets or sets the prefix of the feature branches for GitFlow purposes</summary>
            <value>The feature branches prefix.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Category_feature">
            <summary>Gets or sets header for features in the change log.</summary>
            <value>The feature-changes header text.</value>
        </member>
        <member name="P:CS.Changelog.Console.Options.Category_hotfix">
            <summary>Gets or sets header for hotfixes in the change log.</summary>
            <value>The hotfix-changes header text.</value>
        </member>
        <member name="M:CS.Changelog.Console.Options.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:CS.Changelog.Console.Program">
             <summary>
             A console application for generating a change log, performs the following steps:
             <list type="number">  
                <item>  
                    <term>Read history</term>  
                    <description><see cref="M:CS.Changelog.GitExtensions.GetHistory(System.String,System.String,System.Boolean,System.String)">Obtain commit history, based on git commits</see></description>  
                </item>  
                <item>  
                    <term>Interpreting history</term>  
                    <description><see cref="M:CS.Changelog.Parsing.Parse(System.String,CS.Changelog.ParseOptions)">Interpret commits</see> based on <see cref="T:CS.Changelog.ParseOptions"/>.</description>  
                </item>  
                <item>  
                    <term>Writing or appending the changelog</term>  
                    <description><see cref="M:CS.Changelog.Exporters.IChangelogExporter.Export(CS.Changelog.ChangeSet,System.IO.FileInfo,CS.Changelog.Exporters.ExportOptions)">Export the changelog</see> to the requested <see cref="T:CS.Changelog.OutputFormat"/>.</description>  
                </item>
            </list>
             </summary>
        </member>
        <member name="F:CS.Changelog.Console.Program._options">
            <summary>The options to be passed to the program</summary>
        </member>
    </members>
</doc>
